#name: CI - Sonar + Playwright
#
#on:
#  push:
#    branches:
#      - main
#      - 'feature/*'
#      - 'dev'
#  pull_request:
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Setup Node
#        uses: actions/setup-node@v4
#        with:
#          node-version: 18
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Cache sonar scanner
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#
#      - name: Run Sonar Scanner
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#          npm install -g sonar-scanner
#          sonar-scanner \
#            -Dsonar.organization=animesh120503 \
#            -Dsonar.projectKey=Animesh120503_Project-X \
#            -Dsonar.sources=tests \
#            -Dsonar.host.url=https://sonarcloud.io \
#            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

name: SonarCloud Scan

on:
  push:
    branches:
      - main
      - 'feature/*'
      - dev
  pull_request:

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Sonar Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.organization=animesh120503 \
            -Dsonar.projectKey=Animesh120503_Project-X \
            -Dsonar.sources=tests \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

